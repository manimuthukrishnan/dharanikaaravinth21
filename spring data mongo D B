//TIP To <b>Run</b> code, press <shortcut actionId="Run"/> or
// click the <icon src="AllIcons.Actions.Execute"/> icon in the gutter.
public class Main {
    public static void main(String[] args) {
        //TIP Press <shortcut actionId="ShowIntentionActions"/> with your caret at the highlighted text
        // to see how IntelliJ IDEA suggests fixing it.
        System.out.printf("Hello and welcome!");

        for (int i = 1; i <= 5; i++) {
            //TIP Press <shortcut actionId="Debug"/> to start debugging your code. We have set one <icon src="AllIcons.Debugger.Db_set_breakpoint"/> breakpoint
            // for you, but you can always add more by pressing <shortcut actionId="ToggleLineBreakpoint"/>.
            System.out.println("i = " + i);
        }
    }
}<dependencies>
    <!-- Spring Boot Starter Web -->
    <dependency>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-web</artifactId>
    </dependency>

    <!-- Spring Data MongoDB -->
    <dependency>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-data-mongodb</artifactId>
    </dependency>

    <!-- Thymeleaf (For index page form rendering) -->
    <dependency>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-thymeleaf</artifactId>
    </dependency>
</dependencies>


spring.data.mongodb.uri=mongodb://localhost:27017/employeesdb
spring.thymeleaf.prefix=classpath:/templates/
spring.thymeleaf.suffix=.html


import org.springframework.data.annotation.Id;
import org.springframework.data.mongodb.core.mapping.Document;

@Document(collection = "employees")
public class Employee {
    @Id
    private String id;
    private String name;
    private String email;
    private String location;

    // Getters and Setters
}
import org.springframework.data.mongodb.repository.MongoRepository;

public interface EmployeeRepository extends MongoRepository<Employee, String> {
}



import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.*;

        import java.util.List;

@Controller
public class EmployeeController {

    @Autowired
    private EmployeeRepository employeeRepo;

    // Show form (index page)
    @GetMapping("/")
    public String showForm(Model model) {
        model.addAttribute("employee", new Employee());
        return "index";
    }

    // Save employee
    @PostMapping("/save")
    public String saveEmployee(@ModelAttribute Employee employee) {
        employeeRepo.save(employee);
        return "redirect:/displayAll";
    }

    // Display all employees
    @GetMapping("/displayAll")
    @ResponseBody
    public List<Employee> getAllEmployees() {
        return employeeRepo.findAll();
    }

    // Display one employee
    @GetMapping("/display/{id}")
    @ResponseBody
    public Employee getEmployeeById(@PathVariable String id) {
        return employeeRepo.findById(id).orElse(null);
    }
}
<!DOCTYPE html>
<html xmlns:th="http://www.thymeleaf.org">
<head>
<title>Employee Form</title>
</head>
<body>
<h1>Enter Employee Details</h1>
    <form th:action="@{/save}" th:object="${employee}" method="post">
        <label>ID:</label>
        <input type="text" th:field="*{id}" required/><br/>

        <label>Name:</label>
        <input type="text" th:field="*{name}" required/><br/>

        <label>Email:</label>
        <input type="email" th:field="*{email}" required/><br/>

        <label>Location:</label>
        <input type="text" th:field="*{location}" required/><br/>

        <button type="submit">Submit</button>
    </form>
</body>
</html>


        | Requirement               | Endpoint / Page | Description           |
     1   | Submit Form               | `/` + `/save`   | Form submission to MongoDB            |
     2   | Display All Employees     | `/displayAll`   | Shows all employee records            |
     3   | Display Specific Employee | `/display/{id}` | Shows details for a specific employee |
